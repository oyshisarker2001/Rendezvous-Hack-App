---
name: "Build and deploy docker image"
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - 'main'
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: |
            substituters = https://cache.nixos.org/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            keep-env-derivations = true
            keep-outputs = true

      - name: Restore and save Nix store and npm cache
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: build-${{ runner.os }}-${{ hashFiles('yarn.lock', '.npmrc', 'package.json', 'flake.nix', 'flake.lock') }}
          # do purge caches
          purge: true
          # purge all versions of the cache
          purge-prefixes: build-${{ runner.os }}-
          # created more than 0 seconds ago relative to the start of the `Post Restore` phase
          purge-created: 0
          # except the version with the `primary-key`, if it exists
          purge-primary-key: never
          # and collect garbage in the Nix store until it reaches this size in bytes
          gc-max-store-size: 0

      - uses: imjasonh/setup-crane@v0.1
      - run: |
          set -eu

          OCI_ARCHIVE=$(nix build --no-link --print-out-paths .#docker)
          DOCKER_REPOSITORY="docker://ghcr.io/coral-protocol/coral-studio"

          gzip --decompress --stdout --force < $OCI_ARCHIVE > result.tar
          crane push ./result.tar "ghcr.io/coral-protocol/coral-studio"
        if: github.ref == 'refs/heads/main'
